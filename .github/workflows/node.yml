name: NodeJS CI/CD
description: Github workflow to execute ci as part of a github workflow for NodeJS projects
on:
  workflow_call:
    inputs:
      suppression:
        required: false
        type: boolean
        default: false
      publish:
        required: false
        type: string
      deploy:
        required: false
        type: string
    secrets:
      snyk-token:
        required: true
      npm-token:
        required: false
jobs:
  snyk-test:
    runs-on: ubuntu-latest
    steps:
      - name: Run Snyk Test
        uses: tarsilla-app/actions/code-analysis/node/snyk/test@main
        with:
          token: ${{ secrets.snyk-token }}
  owasp:
    runs-on: ubuntu-latest
    steps:
      - name: Run OWASP Dependency-Check
        uses: tarsilla-app/actions/code-analysis/node/owasp@main
        with:
          suppression: ${{ inputs.suppression }}
  snyk-code-test:
    runs-on: ubuntu-latest
    steps:
      - name: Run Snyk Code Test
        uses: tarsilla-app/actions/code-analysis/node/snyk/code-test@main
        with:
          token: ${{ secrets.snyk-token }}
  codeql:
    runs-on: ubuntu-latest
    steps:
      - name: Run CodeQL Analysis
        uses: tarsilla-app/actions/code-analysis/node/codeql@main
  publish-npm:
    runs-on: ubuntu-latest
    if: ${{ fromJson(inputs.deploy)[0] == 'library' }}
    needs: [snyk-test, owasp, snyk-code-test, codeql]
    steps:
      - name: Publish to NPM
        uses: tarsilla-app/actions/publish/library@main
        with:
          deploy: ${{ fromJson(inputs.deploy)[1] }}
          npm-token: ${{ secrets.npm-token }}
  deploy-storybook:
    runs-on: ubuntu-latest
    if: ${{ fromJson(inputs.deploy)[0] == 'storybook' }}
    needs: [snyk-test, owasp, snyk-code-test, codeql]
    outputs:
      pages_url: ${{ steps.deploy.outputs.pages_url }}
    steps:
      - id: deploy
        name: Deploy Storybook to Github Pages
        uses: tarsilla-app/actions/deploy/storybook@main
        with:
          deploy: ${{ fromJson(inputs.deploy)[1] }}
      - name: Print Pages URL
        run: "echo 'Pages URL: ${{ steps.deploy.outputs.pages_url }}'"